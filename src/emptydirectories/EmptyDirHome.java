/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emptydirectories;

import java.awt.Color;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;

/**
 *
 * @author Ariyanas
 */
public class EmptyDirHome extends javax.swing.JFrame {
    
    public static boolean flag = true;

    /**
     * Creates new form EmptyDirHome
     */
    public EmptyDirHome() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBoxDir = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaOutput = new javax.swing.JTextPane();
        btnDelete = new javax.swing.JButton();
        btnResult = new javax.swing.JButton();
        txtStatus = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Empty Directory Search");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Root Directory");

        txtBoxDir.setText("Type Directory name or Browse");
        txtBoxDir.setMargin(new java.awt.Insets(2, 5, 2, 5));
        txtBoxDir.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBoxDirFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBoxDirFocusLost(evt);
            }
        });
        txtBoxDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBoxDirActionPerformed(evt);
            }
        });

        btnBrowse.setText("...");
        btnBrowse.setToolTipText("Browse and select folder");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.setToolTipText("Search for empty directories in the root folder");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtAreaOutput.setEditable(false);
        jScrollPane1.setViewportView(txtAreaOutput);

        btnDelete.setText("Delete");
        btnDelete.setToolTipText("Delete all empty directories");
        btnDelete.setEnabled(false);
        btnDelete.setPreferredSize(new java.awt.Dimension(65, 23));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnResult.setText("Result");
        btnResult.setToolTipText("Save result  LOG");
        btnResult.setEnabled(false);
        btnResult.setPreferredSize(new java.awt.Dimension(65, 23));
        btnResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultActionPerformed(evt);
            }
        });

        txtStatus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTextField1.setText("jTextField1");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Search result");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 162, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtBoxDir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(27, 27, 27)
                        .addComponent(btnResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBoxDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBoxDirFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBoxDirFocusGained
        txtBoxDir.setText("");
        txtStatus.setForeground(Color.black);
        txtStatus.setText("");
    }//GEN-LAST:event_txtBoxDirFocusGained

    private void txtBoxDirFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBoxDirFocusLost
        // TODO add your handling code here:
        if(txtBoxDir.getText().trim().isEmpty()){
            txtBoxDir.setText("Type Directory name or Browse");
        }
        txtStatus.setForeground(Color.black);
        txtStatus.setText("");
    }//GEN-LAST:event_txtBoxDirFocusLost

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        txtStatus.setText("Searching please wait ...");
        empty.clear();
        searchDir();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtBoxDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBoxDirActionPerformed
        txtStatus.setText("Searching please wait ...");
        searchDir();
    }//GEN-LAST:event_txtBoxDirActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(!empty.isEmpty()){
            txtAreaOutput.setText("Deleting directories , please wait ...\n");
            empty.stream().map((file) -> {
                txtAreaOutput.setText(txtAreaOutput.getText()+"\nDeleted :  "+file.getAbsolutePath());
                return file;
            }).forEachOrdered((file) -> {
                file.delete();
            });
            empty.clear();
            btnResult.setEnabled(false);
            btnDelete.setEnabled(false);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultActionPerformed
        if(!empty.isEmpty()){
            txtStatus.setForeground(Color.black);
            txtAreaOutput.setText("Populating empty directories list , please wait ...\n\n");
            int i = 1;
            for(File file : empty){
                txtAreaOutput.setText(txtAreaOutput.getText()+"\n"+i+"  :  "+file.getAbsolutePath()+"\n");
                i++;
            }
            
            txtStatus.setText(i+"  Empty directories found !!");
            btnDelete.setEnabled(true);
        }
    }//GEN-LAST:event_btnResultActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jf.setAcceptAllFileFilterUsed(false);
        
        if(jf.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            txtBoxDir.setText(jf.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmptyDirHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmptyDirHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmptyDirHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmptyDirHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EmptyDirHome home = new EmptyDirHome();
                home.setLocationRelativeTo(null);
                home.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnResult;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane txtAreaOutput;
    private javax.swing.JTextField txtBoxDir;
    private javax.swing.JLabel txtStatus;
    // End of variables declaration//GEN-END:variables

    private void searchDir(){
        flag = true;
        btnDelete.setEnabled(false);
        btnResult.setEnabled(false);
        String rootDirName = txtBoxDir.getText().trim();
        txtAreaOutput.setText("");
        
        File root = new File(rootDirName);
        txtAreaOutput.setText("Root Directory :  "+root.getAbsolutePath());
        
        try{
            if(root.isDirectory()){
                checkForEmptyDir(root);
                
                if(flag){
                    txtAreaOutput.setText("No empty directories found in :  "+root.getAbsolutePath());
                }else{
                    btnResult.setEnabled(true);
                }
                
                txtStatus.setForeground(Color.green);
                txtStatus.setText("Search Completed !!!");
            }else{
                txtAreaOutput.setText("Not a valid directory !!!\n\nPlease enter a valid directory name.");
                txtStatus.setForeground(Color.red);
                txtStatus.setText("Search Error !!!");
            }
        }catch(Exception e){
            txtAreaOutput.setText(txtAreaOutput.getText()+"\n\n\n"+e.getMessage());
            txtStatus.setForeground(Color.red);
            txtStatus.setText("Search Error !!!");
        }
    }
    
    public ArrayList<File> empty = new ArrayList<>();
    
    private void checkForEmptyDir(File root) {
        
        txtAreaOutput.setText(txtAreaOutput.getText()+"\nSearching in Directory :  "+root.getAbsolutePath());
        
        try{
            if(root.list().length == 0){
                empty.add(root);
                txtAreaOutput.setText(txtAreaOutput.getText()+"\n\nEmpty directory :  "+root.getAbsolutePath()+"\n");
                flag = false;
            }else{
                for(File file : root.listFiles()){
                    if(file.isDirectory()){
                        checkForEmptyDir(file);
                    }
                }
            }
        }catch(Exception e){
            txtAreaOutput.setText(txtAreaOutput.getText()+"\n\n\n"+e.getMessage());
            txtStatus.setForeground(Color.red);
            txtStatus.setText("Search Error !!!");
        }
    }
}
